name: Build and Deploy via Bastion

on:
  workflow_dispatch:  # Trigger manually from GitHub UI

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # ====== Docker Hub Login ======
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # ====== Build & Push Backend ======
    - name: Build backend image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/mern-backend:latest ./backend

    - name: Push backend image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/mern-backend:latest

    # ====== Build & Push Frontend ======
    - name: Build frontend image
      run: docker build --build-arg VITE_BACKEND_ENDPOINT=/api --build-arg VITE_SERVER_HOSTNAME=$HOSTNAME -t ${{ secrets.DOCKERHUB_USERNAME }}/mern-frontend:latest ./frontend

    - name: Push frontend image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/mern-frontend:latest

    # ====== SSH to Bastion and Deploy Backend & Frontend ======
    # - name: SSH into Bastion and deploy containers
    #   uses: appleboy/ssh-action@v1.0.0
    #   with:
    #     host: ${{ secrets.BASTION_IP }}
    #     username: ${{ secrets.SSH_USER }}
    #     key: ${{ secrets.PRIVATE_KEY }}
    #     script: |
    #       # === Deploy Backend ===
    #       ssh -o StrictHostKeyChecking=no ubuntu@10.0.2.215 << 'EOF'
    #         docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mern-backend:latest
    #         cd /home/ubuntu/mern-gallery-sample-app/backend
    #         docker compose down
    #         docker compose up -d --build
    #       EOF

    #       # === Deploy Frontend ===
    #       ssh -o StrictHostKeyChecking=no ubuntu@10.0.2.5 << 'EOF'
    #         docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mern-frontend:latest
    #         cd /home/ubuntu/mern-gallery-sample-app/frontend
    #         docker compose down
    #         docker compose up -d --build
    #       EOF
